{"ast":null,"code":"var _jsxFileName = \"/Users/Chloe/Desktop/CS1300/Development/src/components/FilteredList.js\";\nimport Product from \"./Product.js\";\nimport productList from \"../assets/products.js\";\nimport { NavItem } from \"react-bootstrap\";\n//contains filtering/sorting/aggregator methods\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FilteredList(props) {\n  const list = props.list;\n\n  //sorts products\n  //this function was adapted from this post: https://stackoverflow.com/questions/19259233/sorting-json-by-specific-element-alphabetically \n  const sortedArray = productList.sort((a, b) => {\n    return a.name < b.name ? -1 : a.name > b.name ? 1 : 0;\n  });\n  if (props.sortStyle === \"lth\") {\n    const sortedArray = productList.sort((a, b) => {\n      return a.price - b.price;\n    });\n  } else if (props.sortStyle === \"htl\") {\n    const sortedArray = productList.sort((a, b) => {\n      return b.price - a.price;\n    });\n  }\n  const matchesFilterType = item => {\n    // console.log('props', props);\n    // console.log('props.filters', props.filters);\n    // all items should be shown when no filter is selected\n    if (props.filters.length == 0) {\n      console.log('nofilters');\n      return Product({\n        product: item,\n        name: item.name,\n        priceTotal: props.priceTotal,\n        setPriceTotal: props.setPriceTotal,\n        theCartItems: props.theCartItems,\n        cartSetter: props.cartSetter\n      });\n    } else {\n      console.log('nofilters');\n      for (let i = 0; i < props.filters.length; i++) {\n        if (item.diet == props.filters[i]) {\n          console.log('diet: ', props.filters[i]);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bakeryGallery\",\n    children: sortedArray.map(item =>\n    // TODO: map bakeryData to BakeryItem components\n    matchesFilterType(item))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_c = FilteredList;\nvar _c;\n$RefreshReg$(_c, \"FilteredList\");","map":{"version":3,"names":["Product","productList","NavItem","FilteredList","props","list","sortedArray","sort","a","b","name","sortStyle","price","matchesFilterType","item","filters","length","console","log","product","priceTotal","setPriceTotal","theCartItems","cartSetter","i","diet","map"],"sources":["/Users/Chloe/Desktop/CS1300/Development/src/components/FilteredList.js"],"sourcesContent":["import Product from \"./Product.js\"\nimport productList from \"../assets/products.js\";\nimport { NavItem } from \"react-bootstrap\";\n//contains filtering/sorting/aggregator methods\n\nexport default function FilteredList(props) {\n\n    const list = props.list \n\n    //sorts products\n    //this function was adapted from this post: https://stackoverflow.com/questions/19259233/sorting-json-by-specific-element-alphabetically \n    const sortedArray = productList.sort((a, b) => {\n        return a.name < b.name ? -1 : a.name > b.name ? 1 : 0;\n    })\n    if (props.sortStyle === \"lth\") {\n        const sortedArray = productList.sort((a, b) => {\n            return a.price - b.price;\n        })\n    }\n    else if (props.sortStyle === \"htl\") {\n        const sortedArray = productList.sort((a, b) => {\n            return b.price - a.price;\n        })\n    }\n     \n\n    const matchesFilterType = item => {\n\n        // console.log('props', props);\n        // console.log('props.filters', props.filters);\n        // all items should be shown when no filter is selected\n        if(props.filters.length == 0) { \n            console.log('nofilters')\n            return  Product({\n                product: item,\n                name: item.name, \n                priceTotal: props.priceTotal, \n                setPriceTotal: props.setPriceTotal, \n                theCartItems: props.theCartItems, \n                cartSetter: props.cartSetter})\n        } else {\n            console.log('nofilters')\n            for (let i = 0; i < props.filters.length; i++){\n                if (item.diet == props.filters[i]) {\n                    console.log('diet: ', props.filters[i])\n                }\n            }\n        }\n    }\n\n\n    return(\n        <div className= \"bakeryGallery\">\n        {sortedArray.map((item) => ( // TODO: map bakeryData to BakeryItem components\n            matchesFilterType(item) ))}      \n     </div>\n    )\n}"],"mappings":";AAAA,OAAOA,OAAO,MAAM,cAAc;AAClC,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,SAASC,OAAO,QAAQ,iBAAiB;AACzC;AAAA;AAEA,eAAe,SAASC,YAAY,CAACC,KAAK,EAAE;EAExC,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAI;;EAEvB;EACA;EACA,MAAMC,WAAW,GAAGL,WAAW,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IAC3C,OAAOD,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,GAAG,CAAC,CAAC,GAAGF,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,GAAG,CAAC,GAAG,CAAC;EACzD,CAAC,CAAC;EACF,IAAIN,KAAK,CAACO,SAAS,KAAK,KAAK,EAAE;IAC3B,MAAML,WAAW,GAAGL,WAAW,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC3C,OAAOD,CAAC,CAACI,KAAK,GAAGH,CAAC,CAACG,KAAK;IAC5B,CAAC,CAAC;EACN,CAAC,MACI,IAAIR,KAAK,CAACO,SAAS,KAAK,KAAK,EAAE;IAChC,MAAML,WAAW,GAAGL,WAAW,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC3C,OAAOA,CAAC,CAACG,KAAK,GAAGJ,CAAC,CAACI,KAAK;IAC5B,CAAC,CAAC;EACN;EAGA,MAAMC,iBAAiB,GAAGC,IAAI,IAAI;IAE9B;IACA;IACA;IACA,IAAGV,KAAK,CAACW,OAAO,CAACC,MAAM,IAAI,CAAC,EAAE;MAC1BC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MACxB,OAAQlB,OAAO,CAAC;QACZmB,OAAO,EAAEL,IAAI;QACbJ,IAAI,EAAEI,IAAI,CAACJ,IAAI;QACfU,UAAU,EAAEhB,KAAK,CAACgB,UAAU;QAC5BC,aAAa,EAAEjB,KAAK,CAACiB,aAAa;QAClCC,YAAY,EAAElB,KAAK,CAACkB,YAAY;QAChCC,UAAU,EAAEnB,KAAK,CAACmB;MAAU,CAAC,CAAC;IACtC,CAAC,MAAM;MACHN,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MACxB,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGpB,KAAK,CAACW,OAAO,CAACC,MAAM,EAAEQ,CAAC,EAAE,EAAC;QAC1C,IAAIV,IAAI,CAACW,IAAI,IAAIrB,KAAK,CAACW,OAAO,CAACS,CAAC,CAAC,EAAE;UAC/BP,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEd,KAAK,CAACW,OAAO,CAACS,CAAC,CAAC,CAAC;QAC3C;MACJ;IACJ;EACJ,CAAC;EAGD,oBACI;IAAK,SAAS,EAAE,eAAe;IAAA,UAC9BlB,WAAW,CAACoB,GAAG,CAAEZ,IAAI;IAAO;IACzBD,iBAAiB,CAACC,IAAI,CAAG;EAAC;IAAA;IAAA;IAAA;EAAA,QAC3B;AAEX;AAAC,KApDuBX,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}