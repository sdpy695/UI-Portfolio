{"ast":null,"code":"\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n// Generated by CoffeeScript 2.5.1\nvar SpecialString, i, len, prop, ref;\nmodule.exports = SpecialString = function () {\n  var self;\n  var SpecialString = /*#__PURE__*/function () {\n    function SpecialString(str) {\n      _classCallCheck(this, SpecialString);\n      if (!(this instanceof self)) {\n        return new self(str);\n      }\n      this._str = String(str);\n      this._len = 0;\n    }\n    _createClass(SpecialString, [{\n      key: \"_getStr\",\n      value: function _getStr() {\n        return this._str;\n      }\n    }, {\n      key: \"set\",\n      value: function set(str) {\n        this._str = String(str);\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new SpecialString(this._str);\n      }\n    }, {\n      key: \"isEmpty\",\n      value: function isEmpty() {\n        return this._str === '';\n      }\n    }, {\n      key: \"isOnlySpecialChars\",\n      value: function isOnlySpecialChars() {\n        return !this.isEmpty() && this.length === 0;\n      }\n    }, {\n      key: \"_reset\",\n      value: function _reset() {\n        return this._len = 0;\n      }\n    }, {\n      key: \"splitIn\",\n      value: function splitIn(limit) {\n        var trimLeftEachLine = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var buffer, bufferLength, justSkippedSkipChar, lines;\n        buffer = '';\n        bufferLength = 0;\n        lines = [];\n        justSkippedSkipChar = false;\n        self._countChars(this._str, function (char, charLength) {\n          if (bufferLength > limit || bufferLength + charLength > limit) {\n            lines.push(buffer);\n            buffer = '';\n            bufferLength = 0;\n          }\n          if (bufferLength === 0 && char === ' ' && !justSkippedSkipChar && trimLeftEachLine) {\n            return justSkippedSkipChar = true;\n          } else {\n            buffer += char;\n            bufferLength += charLength;\n            return justSkippedSkipChar = false;\n          }\n        });\n        if (buffer.length > 0) {\n          lines.push(buffer);\n        }\n        return lines;\n      }\n    }, {\n      key: \"trim\",\n      value: function trim() {\n        return new SpecialString(this.str.trim());\n      }\n    }, {\n      key: \"_getLength\",\n      value: function _getLength() {\n        var sum;\n        sum = 0;\n        self._countChars(this._str, function (char, charLength) {\n          sum += charLength;\n        });\n        return sum;\n      }\n    }, {\n      key: \"cut\",\n      value: function cut(from, to) {\n        var _this = this;\n        var trimLeft = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var after, before, cur, cut;\n        if (to == null) {\n          to = this.length;\n        }\n        from = parseInt(from);\n        if (from >= to) {\n          throw Error(\"`from` shouldn't be larger than `to`\");\n        }\n        before = '';\n        after = '';\n        cut = '';\n        cur = 0;\n        self._countChars(this._str, function (char, charLength) {\n          if (_this.str === 'ab<tag>') {\n            console.log(charLength, char);\n          }\n          if (cur === from && char.match(/^\\s+$/) && trimLeft) {\n            return;\n          }\n          if (cur < from) {\n            before += char; // let's be greedy\n          } else if (cur < to || cur + charLength <= to) {\n            cut += char;\n          } else {\n            after += char;\n          }\n          cur += charLength;\n        });\n        this._str = before + after;\n        this._reset();\n        return new SpecialString(cut);\n      }\n    }], [{\n      key: \"_countChars\",\n      value: function _countChars(text, cb) {\n        var char, charLength, m;\n        while (text.length !== 0) {\n          if (m = text.match(self._tagRx)) {\n            char = m[0];\n            charLength = 0;\n            text = text.substr(char.length, text.length);\n          } else if (m = text.match(self._quotedHtmlRx)) {\n            char = m[0];\n            charLength = 1;\n            text = text.substr(char.length, text.length);\n          } else if (text.match(self._tabRx)) {\n            char = \"\\t\";\n            charLength = 8;\n            text = text.substr(1, text.length);\n          } else {\n            char = text[0];\n            charLength = 1;\n            text = text.substr(1, text.length);\n          }\n          cb.call(null, char, charLength);\n        }\n      }\n    }]);\n    return SpecialString;\n  }();\n  ;\n  self = SpecialString;\n  SpecialString._tabRx = /^\\t/;\n  SpecialString._tagRx = /^<[^>]+>/;\n  SpecialString._quotedHtmlRx = /^&(gt|lt|quot|amp|apos|sp);/;\n  return SpecialString;\n}.call(void 0);\nref = ['str', 'length'];\nfor (i = 0, len = ref.length; i < len; i++) {\n  prop = ref[i];\n  (function () {\n    var methodName;\n    methodName = '_get' + prop[0].toUpperCase() + prop.substr(1, prop.length);\n    return SpecialString.prototype.__defineGetter__(prop, function () {\n      return this[methodName]();\n    });\n  })();\n}","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","SpecialString","len","prop","ref","module","exports","self","str","_str","String","_len","value","_getStr","set","clone","isEmpty","isOnlySpecialChars","_reset","splitIn","limit","trimLeftEachLine","arguments","undefined","buffer","bufferLength","justSkippedSkipChar","lines","_countChars","char","charLength","push","trim","_getLength","sum","cut","from","to","_this","trimLeft","after","before","cur","parseInt","Error","console","log","match","text","cb","m","_tagRx","substr","_quotedHtmlRx","_tabRx","call","methodName","toUpperCase","__defineGetter__"],"sources":["/Users/Chloe/Desktop/CS1300/UI-Portfolio/node_modules/renderkid/lib/layout/SpecialString.js"],"sourcesContent":["\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// Generated by CoffeeScript 2.5.1\nvar SpecialString, i, len, prop, ref;\n\nmodule.exports = SpecialString = function () {\n  var self;\n\n  var SpecialString = /*#__PURE__*/function () {\n    function SpecialString(str) {\n      _classCallCheck(this, SpecialString);\n\n      if (!(this instanceof self)) {\n        return new self(str);\n      }\n\n      this._str = String(str);\n      this._len = 0;\n    }\n\n    _createClass(SpecialString, [{\n      key: \"_getStr\",\n      value: function _getStr() {\n        return this._str;\n      }\n    }, {\n      key: \"set\",\n      value: function set(str) {\n        this._str = String(str);\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new SpecialString(this._str);\n      }\n    }, {\n      key: \"isEmpty\",\n      value: function isEmpty() {\n        return this._str === '';\n      }\n    }, {\n      key: \"isOnlySpecialChars\",\n      value: function isOnlySpecialChars() {\n        return !this.isEmpty() && this.length === 0;\n      }\n    }, {\n      key: \"_reset\",\n      value: function _reset() {\n        return this._len = 0;\n      }\n    }, {\n      key: \"splitIn\",\n      value: function splitIn(limit) {\n        var trimLeftEachLine = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var buffer, bufferLength, justSkippedSkipChar, lines;\n        buffer = '';\n        bufferLength = 0;\n        lines = [];\n        justSkippedSkipChar = false;\n\n        self._countChars(this._str, function (char, charLength) {\n          if (bufferLength > limit || bufferLength + charLength > limit) {\n            lines.push(buffer);\n            buffer = '';\n            bufferLength = 0;\n          }\n\n          if (bufferLength === 0 && char === ' ' && !justSkippedSkipChar && trimLeftEachLine) {\n            return justSkippedSkipChar = true;\n          } else {\n            buffer += char;\n            bufferLength += charLength;\n            return justSkippedSkipChar = false;\n          }\n        });\n\n        if (buffer.length > 0) {\n          lines.push(buffer);\n        }\n\n        return lines;\n      }\n    }, {\n      key: \"trim\",\n      value: function trim() {\n        return new SpecialString(this.str.trim());\n      }\n    }, {\n      key: \"_getLength\",\n      value: function _getLength() {\n        var sum;\n        sum = 0;\n\n        self._countChars(this._str, function (char, charLength) {\n          sum += charLength;\n        });\n\n        return sum;\n      }\n    }, {\n      key: \"cut\",\n      value: function cut(from, to) {\n        var _this = this;\n\n        var trimLeft = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var after, before, cur, cut;\n\n        if (to == null) {\n          to = this.length;\n        }\n\n        from = parseInt(from);\n\n        if (from >= to) {\n          throw Error(\"`from` shouldn't be larger than `to`\");\n        }\n\n        before = '';\n        after = '';\n        cut = '';\n        cur = 0;\n\n        self._countChars(this._str, function (char, charLength) {\n          if (_this.str === 'ab<tag>') {\n            console.log(charLength, char);\n          }\n\n          if (cur === from && char.match(/^\\s+$/) && trimLeft) {\n            return;\n          }\n\n          if (cur < from) {\n            before += char; // let's be greedy\n          } else if (cur < to || cur + charLength <= to) {\n            cut += char;\n          } else {\n            after += char;\n          }\n\n          cur += charLength;\n        });\n\n        this._str = before + after;\n\n        this._reset();\n\n        return new SpecialString(cut);\n      }\n    }], [{\n      key: \"_countChars\",\n      value: function _countChars(text, cb) {\n        var char, charLength, m;\n\n        while (text.length !== 0) {\n          if (m = text.match(self._tagRx)) {\n            char = m[0];\n            charLength = 0;\n            text = text.substr(char.length, text.length);\n          } else if (m = text.match(self._quotedHtmlRx)) {\n            char = m[0];\n            charLength = 1;\n            text = text.substr(char.length, text.length);\n          } else if (text.match(self._tabRx)) {\n            char = \"\\t\";\n            charLength = 8;\n            text = text.substr(1, text.length);\n          } else {\n            char = text[0];\n            charLength = 1;\n            text = text.substr(1, text.length);\n          }\n\n          cb.call(null, char, charLength);\n        }\n      }\n    }]);\n\n    return SpecialString;\n  }();\n\n  ;\n  self = SpecialString;\n  SpecialString._tabRx = /^\\t/;\n  SpecialString._tagRx = /^<[^>]+>/;\n  SpecialString._quotedHtmlRx = /^&(gt|lt|quot|amp|apos|sp);/;\n  return SpecialString;\n}.call(void 0);\n\nref = ['str', 'length'];\n\nfor (i = 0, len = ref.length; i < len; i++) {\n  prop = ref[i];\n\n  (function () {\n    var methodName;\n    methodName = '_get' + prop[0].toUpperCase() + prop.substr(1, prop.length);\n    return SpecialString.prototype.__defineGetter__(prop, function () {\n      return this[methodName]();\n    });\n  })();\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}