{"ast":null,"code":"var _jsxFileName = \"/Users/Chloe/Desktop/CS1300/Development/src/components/NavBar.js\";\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport FilteredList from './FilteredList';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport { chainPropTypes } from '@mui/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NavBar(props) {\n  const handleChange = event => {\n    console.log('event', event);\n    console.log('event.target.value', event.target.value);\n    props.selectSortStyle(event.target.value);\n  };\n\n  //sets the state to the selected type, function passed to the onSelect event handler of HTML buttons\n  function updateFilters(typetype) {\n    const oldFilters = props.filters;\n    for (i in oldFilters) {\n      if (oldFilters[i] == typetype) {\n        oldFilters.splice(i, 1);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          m: 1,\n          minWidth: 120\n        },\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: \"Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: props.filters,\n          label: \"Age\",\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"alph\",\n            children: \"Alphabetically\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"lth\",\n            children: \"Price: low to high\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"htl\",\n            children: \"Price: high to low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        onChange: event => updateFilters(event),\n        defaultChecked: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this),\n      label: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        onChange: event => updateFilters(event),\n        defaultChecked: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this),\n      label: \"Filter A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        onChange: event => updateFilters(event),\n        defaultChecked: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this),\n      label: \"Filter B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_c = NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["Container","Nav","Navbar","NavDropdown","FilteredList","Dropdown","Checkbox","FormControlLabel","FormControl","InputLabel","MenuItem","Select","SelectChangeEvent","chainPropTypes","NavBar","props","handleChange","event","console","log","target","value","selectSortStyle","updateFilters","typetype","oldFilters","filters","i","splice","m","minWidth"],"sources":["/Users/Chloe/Desktop/CS1300/Development/src/components/NavBar.js"],"sourcesContent":["import Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport FilteredList from './FilteredList';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport { chainPropTypes } from '@mui/utils';\n\n\nexport default function NavBar(props) {\n \n  const handleChange = (event) => {\n    console.log('event', event)\n    console.log('event.target.value', event.target.value)\n   props.selectSortStyle(event.target.value);\n  };\n\n\n  //sets the state to the selected type, function passed to the onSelect event handler of HTML buttons\n  function updateFilters (typetype) {\n    const oldFilters = props.filters\n    for (i in oldFilters){\n      if (oldFilters[i]==typetype) {\n        oldFilters.splice(i,1)\n      }\n    }\n\n  }\n\n\n  return (\n    <div>\n      <div>\n        <FormControl sx={{ m: 1, minWidth: 120 }} size=\"small\">\n          <InputLabel id=\"demo-simple-select-label\">Sort</InputLabel>\n          <Select\n            value={props.filters}\n            label=\"Age\"\n            onChange={handleChange}\n          >\n            <MenuItem value={\"alph\"}>Alphabetically</MenuItem>\n            <MenuItem value={\"lth\"}>Price: low to high</MenuItem>\n            <MenuItem value={\"htl\"}>Price: high to low</MenuItem>\n            {/* <MenuItem value={30}>Thirty</MenuItem> */}\n          </Select>\n        </FormControl>\n      </div>\n      <FormControlLabel control={\n          <Checkbox \n              onChange={(event) =>\n                updateFilters(event)\n              }\n              defaultChecked />\n        } label=\"All\" />\n      <FormControlLabel control={\n          <Checkbox \n              onChange={(event) =>\n                updateFilters(event)\n              }\n              defaultChecked />\n        } label=\"Filter A\" />\n      <FormControlLabel control={\n          <Checkbox \n              onChange={(event) =>\n                updateFilters(event)\n              }\n              defaultChecked />\n        } label=\"Filter B\" />\n        \n        {/* <Nav onSelect={props.selectFilterType}>\n          <Nav.Item>Filter:</Nav.Item>\n          <Nav.Item><Nav.Link eventKey=\"All\">All</Nav.Link></Nav.Item>\n          <Nav.Item><Nav.Link eventKey=\"5\">Over $5</Nav.Link></Nav.Item>\n          <Nav.Item><Nav.Link eventKey=\"5\">Under</Nav.Link></Nav.Item>\n        </Nav> */}\n    </div>\n  )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}