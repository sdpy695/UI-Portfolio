{"ast":null,"code":"var _jsxFileName = \"/Users/Chloe/Desktop/CS1300/Development/src/components/NavBar.js\",\n  _s = $RefreshSig$();\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport { chainPropTypes } from '@mui/utils';\nimport { formLabelClasses } from '@mui/material';\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NavBar(props) {\n  _s();\n  const [allFilters, setAllFilters] = useState(true);\n  const handleChange = event => {\n    console.log('event', event);\n    console.log('event.target.value', event.target.value);\n    props.selectSortStyle(event.target.value);\n  };\n  function resetFilters() {\n    setAllFilters(true);\n    props.updateFilters({\n      diet: [],\n      legs: []\n    });\n  }\n\n  // //sets the state to the selected type, function passed to the onSelect event handler of HTML buttons\n  // function updateFilters (typetype) {\n\n  //   const oldFilters = props.filters\n  //   var found = new Boolean(false)\n\n  //   console.log('oldFilters', oldFilters)\n  //   for (let i = 0; i < oldFilters.length; i++){\n  //     if (oldFilters[i]==typetype) {\n  //       console.log('found')\n  //       found = true\n  //       oldFilters.splice(i,1)\n  //       console.log(oldFilters)\n  //       props.updateFilters(oldFilters)\n  //     }\n  //   }\n\n  //   if (found == false){\n  //     oldFilters.push(typetype)\n  //     console.log(oldFilters)\n  //     props.updateFilters(oldFilters)\n  //   }\n\n  //   if(oldFilters.length === 0){\n  //     console.log(\"NO FILTERS\")\n  //     setAllFilters(true)}\n  //   else{\n  //     console.log(\"FILTERS\")\n  //     setAllFilters(false);\n  //   }\n\n  // }\n\n  function updateDiet(newDiet) {\n    const oldFilters = props.filters.diet;\n    const oldLegFilters = props.filters.legs;\n    console.log('updating Diet! old diet: ', oldFilters);\n    console.log('updating Diet! old legs: ', oldLegFilters);\n    var found = new Boolean(false);\n    console.log('oldFilters', oldFilters);\n    for (let i = 0; i < oldFilters.length; i++) {\n      if (oldFilters[i] == newDiet) {\n        console.log('found');\n        found = true;\n        oldFilters.splice(i, 1);\n        console.log(\"updating to\", oldFilters);\n        props.updateFilters({\n          diet: oldFilters,\n          legs: oldLegFilters\n        });\n      }\n    }\n    if (found == false) {\n      oldFilters.push(newDiet);\n      console.log(oldFilters);\n      props.updateFilters({\n        diet: oldFilters,\n        legs: oldLegFilters\n      });\n    }\n    if (oldFilters.length === 0) {\n      console.log(\"NO FILTERS\");\n      setAllFilters(true);\n    } else {\n      console.log(\"FILTERS\");\n      setAllFilters(false);\n    }\n    console.log('updating Diet! new legs: ', props.filters.legs);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          m: 1,\n          minWidth: 120\n        },\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: \"Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: props.sortStyle,\n          label: \"Age\",\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"alph\",\n            children: \"Alphabetically\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"lth\",\n            children: \"Price: low to high\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"htl\",\n            children: \"Price: high to low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: allFilters,\n          onChange: event => resetFilters()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this),\n        label: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: !allFilters,\n          onChange: event => updateDiet(\"Carnivore\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this),\n        label: \"Carnivore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: !allFilters,\n          onChange: event => updateDiet(\"Omnivore\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this),\n        label: \"Omnivore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: !allFilters,\n          onChange: event => updateDiet(\"Herbivore\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this),\n        label: \"Herbivore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(NavBar, \"zbnOkbm6IKxorGdFShDhNW9yfGI=\");\n_c = NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["Checkbox","FormControlLabel","FormControl","InputLabel","MenuItem","Select","SelectChangeEvent","chainPropTypes","formLabelClasses","useState","React","NavBar","props","allFilters","setAllFilters","handleChange","event","console","log","target","value","selectSortStyle","resetFilters","updateFilters","diet","legs","updateDiet","newDiet","oldFilters","filters","oldLegFilters","found","Boolean","i","length","splice","push","m","minWidth","sortStyle"],"sources":["/Users/Chloe/Desktop/CS1300/Development/src/components/NavBar.js"],"sourcesContent":["\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport { chainPropTypes } from '@mui/utils';\nimport { formLabelClasses } from '@mui/material';\nimport { useState } from 'react';\n\nimport * as React from 'react';\n\n\n\nexport default function NavBar(props) {\n\n  const [allFilters, setAllFilters] = useState(true)\n\n  const handleChange = (event) => {\n    console.log('event', event)\n    console.log('event.target.value', event.target.value)\n   props.selectSortStyle(event.target.value);\n  };\n\n  function resetFilters () {\n    setAllFilters(true)\n    props.updateFilters({diet: [], legs:[]})\n  }\n\n  // //sets the state to the selected type, function passed to the onSelect event handler of HTML buttons\n  // function updateFilters (typetype) {\n\n  //   const oldFilters = props.filters\n  //   var found = new Boolean(false)\n    \n  //   console.log('oldFilters', oldFilters)\n  //   for (let i = 0; i < oldFilters.length; i++){\n  //     if (oldFilters[i]==typetype) {\n  //       console.log('found')\n  //       found = true\n  //       oldFilters.splice(i,1)\n  //       console.log(oldFilters)\n  //       props.updateFilters(oldFilters)\n  //     }\n  //   }\n\n  //   if (found == false){\n  //     oldFilters.push(typetype)\n  //     console.log(oldFilters)\n  //     props.updateFilters(oldFilters)\n  //   }\n\n  //   if(oldFilters.length === 0){\n  //     console.log(\"NO FILTERS\")\n  //     setAllFilters(true)}\n  //   else{\n  //     console.log(\"FILTERS\")\n  //     setAllFilters(false);\n  //   }\n        \n  // }\n\n  function updateDiet (newDiet) {\n    const oldFilters = props.filters.diet\n    const oldLegFilters =props.filters.legs\n     console.log('updating Diet! old diet: ', oldFilters)\n     console.log('updating Diet! old legs: ', oldLegFilters)\n    var found = new Boolean(false)\n  \n    console.log('oldFilters', oldFilters)\n\n    \n    for (let i = 0; i < oldFilters.length; i++){\n      if (oldFilters[i]==newDiet) {\n        console.log('found')\n        found = true\n        oldFilters.splice(i,1)\n        console.log(\"updating to\", oldFilters)\n        props.updateFilters({diet: oldFilters, legs:oldLegFilters})\n      }\n    }\n\n    if (found == false){\n      oldFilters.push(newDiet)\n      console.log(oldFilters)\n      props.updateFilters({diet: oldFilters, legs:oldLegFilters})\n    }\n\n    if(oldFilters.length === 0){\n      console.log(\"NO FILTERS\")\n      setAllFilters(true)}\n    else{\n      console.log(\"FILTERS\")\n      setAllFilters(false);\n    }\n    console.log('updating Diet! new legs: ', props.filters.legs)\n  }\n\n\n  return (\n    <div>\n      <div>\n        <FormControl sx={{ m: 1, minWidth: 120 }} size=\"small\">\n          <InputLabel id=\"demo-simple-select-label\">Sort</InputLabel>\n          <Select\n            value={props.sortStyle}\n            label=\"Age\"\n            onChange={handleChange}\n          >\n            <MenuItem value={\"alph\"}>Alphabetically</MenuItem>\n            <MenuItem value={\"lth\"}>Price: low to high</MenuItem>\n            <MenuItem value={\"htl\"}>Price: high to low</MenuItem>\n            {/* <MenuItem value={30}>Thirty</MenuItem> */}\n          </Select>\n        </FormControl>\n      </div>\n\n\n\n\n\n\n    <div>\n      <FormControlLabel control={\n          <Checkbox \n              checked={allFilters}\n              onChange={(event) =>\n                resetFilters()\n              }\n              />\n        } label=\"All\" />\n      <FormControlLabel control={\n          <Checkbox \n          checked={!allFilters}\n              onChange={(event) =>\n                updateDiet(\"Carnivore\")\n              }\n              />\n        } label=\"Carnivore\" />\n      <FormControlLabel control={\n          <Checkbox \n          checked={!allFilters}\n              onChange={(event) =>\n                updateDiet(\"Omnivore\")\n              }\n              />\n        } label=\"Omnivore\" />\n      <FormControlLabel control={\n        <Checkbox \n        checked={!allFilters}\n            onChange={(event) =>\n              updateDiet(\"Herbivore\")\n            }\n            />\n      } label=\"Herbivore\" />\n        \n      \n    </div>\n\n        \n  </div>\n  )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}