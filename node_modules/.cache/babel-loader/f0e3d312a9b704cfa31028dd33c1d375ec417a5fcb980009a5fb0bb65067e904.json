{"ast":null,"code":"// @ts-check\n/** @typedef {import(\"webpack/lib/Compilation.js\")} WebpackCompilation */\n'use strict';\n\n/**\n * @type {{[sortmode: string] : (entryPointNames: Array<string>, compilation, htmlWebpackPluginOptions) => Array<string> }}\n * This file contains different sort methods for the entry chunks names\n */\nmodule.exports = {};\n\n/**\n * Performs identity mapping (no-sort).\n * @param  {Array} chunks the chunks to sort\n * @return {Array} The sorted chunks\n */\nmodule.exports.none = chunks => chunks;\n\n/**\n * Sort manually by the chunks\n * @param  {string[]} entryPointNames the chunks to sort\n * @param  {WebpackCompilation} compilation the webpack compilation\n * @param  htmlWebpackPluginOptions the plugin options\n * @return {string[]} The sorted chunks\n */\nmodule.exports.manual = (entryPointNames, compilation, htmlWebpackPluginOptions) => {\n  const chunks = htmlWebpackPluginOptions.chunks;\n  if (!Array.isArray(chunks)) {\n    return entryPointNames;\n  }\n  // Remove none existing entries from\n  // htmlWebpackPluginOptions.chunks\n  return chunks.filter(entryPointName => {\n    return compilation.entrypoints.has(entryPointName);\n  });\n};\n\n/**\n * Defines the default sorter.\n */\nmodule.exports.auto = module.exports.none;","map":{"version":3,"names":["module","exports","none","chunks","manual","entryPointNames","compilation","htmlWebpackPluginOptions","Array","isArray","filter","entryPointName","entrypoints","has","auto"],"sources":["/Users/Chloe/Desktop/CS1300/UI-Portfolio/node_modules/html-webpack-plugin/lib/chunksorter.js"],"sourcesContent":["// @ts-check\n/** @typedef {import(\"webpack/lib/Compilation.js\")} WebpackCompilation */\n'use strict';\n\n/**\n * @type {{[sortmode: string] : (entryPointNames: Array<string>, compilation, htmlWebpackPluginOptions) => Array<string> }}\n * This file contains different sort methods for the entry chunks names\n */\nmodule.exports = {};\n\n/**\n * Performs identity mapping (no-sort).\n * @param  {Array} chunks the chunks to sort\n * @return {Array} The sorted chunks\n */\nmodule.exports.none = chunks => chunks;\n\n/**\n * Sort manually by the chunks\n * @param  {string[]} entryPointNames the chunks to sort\n * @param  {WebpackCompilation} compilation the webpack compilation\n * @param  htmlWebpackPluginOptions the plugin options\n * @return {string[]} The sorted chunks\n */\nmodule.exports.manual = (entryPointNames, compilation, htmlWebpackPluginOptions) => {\n  const chunks = htmlWebpackPluginOptions.chunks;\n  if (!Array.isArray(chunks)) {\n    return entryPointNames;\n  }\n  // Remove none existing entries from\n  // htmlWebpackPluginOptions.chunks\n  return chunks.filter((entryPointName) => {\n    return compilation.entrypoints.has(entryPointName);\n  });\n};\n\n/**\n * Defines the default sorter.\n */\nmodule.exports.auto = module.exports.none;\n"],"mappings":"AAAA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAO,GAAG,CAAC,CAAC;;AAEnB;AACA;AACA;AACA;AACA;AACAD,MAAM,CAACC,OAAO,CAACC,IAAI,GAAGC,MAAM,IAAIA,MAAM;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,MAAM,CAACC,OAAO,CAACG,MAAM,GAAG,CAACC,eAAe,EAAEC,WAAW,EAAEC,wBAAwB,KAAK;EAClF,MAAMJ,MAAM,GAAGI,wBAAwB,CAACJ,MAAM;EAC9C,IAAI,CAACK,KAAK,CAACC,OAAO,CAACN,MAAM,CAAC,EAAE;IAC1B,OAAOE,eAAe;EACxB;EACA;EACA;EACA,OAAOF,MAAM,CAACO,MAAM,CAAEC,cAAc,IAAK;IACvC,OAAOL,WAAW,CAACM,WAAW,CAACC,GAAG,CAACF,cAAc,CAAC;EACpD,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACAX,MAAM,CAACC,OAAO,CAACa,IAAI,GAAGd,MAAM,CAACC,OAAO,CAACC,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}