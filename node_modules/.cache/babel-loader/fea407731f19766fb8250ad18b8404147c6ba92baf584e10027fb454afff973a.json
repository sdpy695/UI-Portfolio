{"ast":null,"code":"var _jsxFileName = \"/Users/Chloe/Desktop/CS1300/Development/src/components/FilteredList.js\",\n  _s = $RefreshSig$();\nimport Product from \"./Product.js\";\nimport { NavItem } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n//contains filtering/sorting/aggregator methods\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FilteredList(props) {\n  _s();\n  const [productList, setProductList] = useState(props.list);\n  // const list = props.list \n\n  useEffect(() => {\n    setProductList(props.list);\n  }, [props.list]);\n\n  //sorts products\n  //this function was adapted from this post: https://stackoverflow.com/questions/19259233/sorting-json-by-specific-element-alphabetically \n  const sortedArray = productList.sort((a, b) => {\n    return a.name < b.name ? -1 : a.name > b.name ? 1 : 0;\n  });\n  if (props.sortStyle === \"lth\") {\n    const sortedArray = productList.sort((a, b) => {\n      return a.price - b.price;\n    });\n  } else if (props.sortStyle === \"htl\") {\n    const sortedArray = productList.sort((a, b) => {\n      return b.price - a.price;\n    });\n  }\n  console.log(\"sortStyle \", props.sortStyle);\n  const matchesFilterType = item => {\n    console.log('productList, ', props.list);\n    console.log('checkingfilters');\n    // console.log('props', props);\n    // console.log('props.filters', props.filters);\n\n    // all items should be shown when no filter is selected\n    if (props.filters.length == 0) {\n      console.log('nofilters');\n      return Product({\n        product: item,\n        name: item.name,\n        priceTotal: props.priceTotal,\n        setPriceTotal: props.setPriceTotal,\n        theCartItems: props.theCartItems,\n        cartSetter: props.cartSetter\n      });\n    } else {\n      console.log('filters');\n      console.log('filters are ', props.filters);\n      for (let i = 0; i < props.filters.length; i++) {\n        console.log(\"filtering by \", props.filters[i]);\n        if (item.diet == props.filters[i]) {\n          console.log('diet: ', props.filters[i]);\n          console.log('adding ', item.name);\n          return Product({\n            product: item,\n            name: item.name,\n            priceTotal: props.priceTotal,\n            setPriceTotal: props.setPriceTotal,\n            theCartItems: props.theCartItems,\n            cartSetter: props.cartSetter\n          });\n        } else {\n          console.log('not adding ', item);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bakeryGallery\",\n    children: sortedArray.map(item =>\n    // TODO: map bakeryData to BakeryItem components\n    matchesFilterType(item))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n\n  //sort array and then filter or filter and then sort array \n  //filter and sort scales better \n}\n_s(FilteredList, \"cTXOee/iX/YfPDSAvX4YFkXBqcQ=\");\n_c = FilteredList;\nvar _c;\n$RefreshReg$(_c, \"FilteredList\");","map":{"version":3,"names":["Product","NavItem","useState","useEffect","FilteredList","props","productList","setProductList","list","sortedArray","sort","a","b","name","sortStyle","price","console","log","matchesFilterType","item","filters","length","product","priceTotal","setPriceTotal","theCartItems","cartSetter","i","diet","map"],"sources":["/Users/Chloe/Desktop/CS1300/Development/src/components/FilteredList.js"],"sourcesContent":["import Product from \"./Product.js\"\nimport { NavItem } from \"react-bootstrap\";\nimport {useState} from \"react\"\nimport {useEffect} from \"react\"\n//contains filtering/sorting/aggregator methods\n\nexport default function FilteredList(props)  {\n    const [productList, setProductList] = useState(props.list)\n    // const list = props.list \n\n    useEffect(() => {\n        setProductList(props.list);\n      }, [props.list]);\n\n    //sorts products\n    //this function was adapted from this post: https://stackoverflow.com/questions/19259233/sorting-json-by-specific-element-alphabetically \n    const sortedArray = productList.sort((a, b) => {\n        return a.name < b.name ? -1 : a.name > b.name ? 1 : 0;\n    })\n    if (props.sortStyle === \"lth\") {\n        const sortedArray = productList.sort((a, b) => {\n            return a.price - b.price;\n        })\n    }\n    else if (props.sortStyle === \"htl\") {\n        const sortedArray = productList.sort((a, b) => {\n            return b.price - a.price;\n        })\n    }\n\n    console.log(\"sortStyle \", props.sortStyle)\n     \n  \n    const matchesFilterType = item => {\n        console.log('productList, ', props.list)\n        console.log('checkingfilters')\n        // console.log('props', props);\n        // console.log('props.filters', props.filters);\n\n\n        // all items should be shown when no filter is selected\n        if(props.filters.length == 0) { \n            console.log('nofilters')\n            return  Product({\n                product: item,\n                name: item.name, \n                priceTotal: props.priceTotal, \n                setPriceTotal: props.setPriceTotal, \n                theCartItems: props.theCartItems, \n                cartSetter: props.cartSetter})\n        } else {\n            console.log('filters')\n            console.log('filters are ', props.filters)\n            for (let i = 0; i < props.filters.length; i++){\n                console.log(\"filtering by \" , props.filters[i])\n                if (item.diet == props.filters[i]) {\n                    console.log('diet: ', props.filters[i])\n                    console.log('adding ', item.name)\n                    return  Product({\n                        product: item,\n                        name: item.name, \n                        priceTotal: props.priceTotal, \n                        setPriceTotal: props.setPriceTotal, \n                        theCartItems: props.theCartItems, \n                        cartSetter: props.cartSetter})\n                }\n                else{\n                    console.log('not adding ', item)\n                }\n            }\n        }\n    }\n\n\n    return(\n        <div className= \"bakeryGallery\">\n        {sortedArray.map((item) => ( // TODO: map bakeryData to BakeryItem components\n            matchesFilterType(item) ))}      \n     </div>\n    )\n\n    //sort array and then filter or filter and then sort array \n    //filter and sort scales better \n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}