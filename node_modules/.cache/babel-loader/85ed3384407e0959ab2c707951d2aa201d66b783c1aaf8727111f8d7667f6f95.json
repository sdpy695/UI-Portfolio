{"ast":null,"code":"\"use strict\";\n\nfunction findRelation_upToPath(urlObj, siteUrlObj, options) {\n  // Path- or root-relative URL\n  var pathOnly = urlObj.extra.hrefInfo.minimumPathOnly;\n\n  // Matching scheme, scheme-relative or path-only\n  var minimumScheme = urlObj.scheme === siteUrlObj.scheme || !urlObj.scheme;\n\n  // Matching auth, ignoring auth or path-only\n  var minimumAuth = minimumScheme && (urlObj.auth === siteUrlObj.auth || options.removeAuth || pathOnly);\n\n  // Matching host or path-only\n  var www = options.ignore_www ? \"stripped\" : \"full\";\n  var minimumHost = minimumAuth && (urlObj.host[www] === siteUrlObj.host[www] || pathOnly);\n\n  // Matching port or path-only\n  var minimumPort = minimumHost && (urlObj.port === siteUrlObj.port || pathOnly);\n  urlObj.extra.relation.minimumScheme = minimumScheme;\n  urlObj.extra.relation.minimumAuth = minimumAuth;\n  urlObj.extra.relation.minimumHost = minimumHost;\n  urlObj.extra.relation.minimumPort = minimumPort;\n  urlObj.extra.relation.maximumScheme = !minimumScheme || minimumScheme && !minimumAuth;\n  urlObj.extra.relation.maximumAuth = !minimumScheme || minimumScheme && !minimumHost;\n  urlObj.extra.relation.maximumHost = !minimumScheme || minimumScheme && !minimumPort;\n}\nfunction findRelation_pathOn(urlObj, siteUrlObj, options) {\n  var queryOnly = urlObj.extra.hrefInfo.minimumQueryOnly;\n  var hashOnly = urlObj.extra.hrefInfo.minimumHashOnly;\n  var empty = urlObj.extra.hrefInfo.empty; // not required, but self-documenting\n\n  // From upToPath()\n  var minimumPort = urlObj.extra.relation.minimumPort;\n  var minimumScheme = urlObj.extra.relation.minimumScheme;\n\n  // Matching port and path\n  var minimumPath = minimumPort && urlObj.path.absolute.string === siteUrlObj.path.absolute.string;\n\n  // Matching resource or query/hash-only or empty\n  var matchingResource = urlObj.resource === siteUrlObj.resource || !urlObj.resource && siteUrlObj.extra.resourceIsIndex || options.removeDirectoryIndexes && urlObj.extra.resourceIsIndex && !siteUrlObj.resource;\n  var minimumResource = minimumPath && (matchingResource || queryOnly || hashOnly || empty);\n\n  // Matching query or hash-only/empty\n  var query = options.removeEmptyQueries ? \"stripped\" : \"full\";\n  var urlQuery = urlObj.query.string[query];\n  var siteUrlQuery = siteUrlObj.query.string[query];\n  var minimumQuery = minimumResource && !!urlQuery && urlQuery === siteUrlQuery || (hashOnly || empty) && !urlObj.extra.hrefInfo.separatorOnlyQuery;\n  var minimumHash = minimumQuery && urlObj.hash === siteUrlObj.hash;\n  urlObj.extra.relation.minimumPath = minimumPath;\n  urlObj.extra.relation.minimumResource = minimumResource;\n  urlObj.extra.relation.minimumQuery = minimumQuery;\n  urlObj.extra.relation.minimumHash = minimumHash;\n  urlObj.extra.relation.maximumPort = !minimumScheme || minimumScheme && !minimumPath;\n  urlObj.extra.relation.maximumPath = !minimumScheme || minimumScheme && !minimumResource;\n  urlObj.extra.relation.maximumResource = !minimumScheme || minimumScheme && !minimumQuery;\n  urlObj.extra.relation.maximumQuery = !minimumScheme || minimumScheme && !minimumHash;\n  urlObj.extra.relation.maximumHash = !minimumScheme || minimumScheme && !minimumHash; // there's nothing after hash, so it's the same as maximumQuery\n\n  // Matching path and/or resource with existing but non-matching site query\n  urlObj.extra.relation.overridesQuery = minimumPath && urlObj.extra.relation.maximumResource && !minimumQuery && !!siteUrlQuery;\n}\nmodule.exports = {\n  pathOn: findRelation_pathOn,\n  upToPath: findRelation_upToPath\n};","map":{"version":3,"names":["findRelation_upToPath","urlObj","siteUrlObj","options","pathOnly","extra","hrefInfo","minimumPathOnly","minimumScheme","scheme","minimumAuth","auth","removeAuth","www","ignore_www","minimumHost","host","minimumPort","port","relation","maximumScheme","maximumAuth","maximumHost","findRelation_pathOn","queryOnly","minimumQueryOnly","hashOnly","minimumHashOnly","empty","minimumPath","path","absolute","string","matchingResource","resource","resourceIsIndex","removeDirectoryIndexes","minimumResource","query","removeEmptyQueries","urlQuery","siteUrlQuery","minimumQuery","separatorOnlyQuery","minimumHash","hash","maximumPort","maximumPath","maximumResource","maximumQuery","maximumHash","overridesQuery","module","exports","pathOn","upToPath"],"sources":["/Users/Chloe/Desktop/CS1300/UI-Portfolio/node_modules/relateurl/lib/relate/findRelation.js"],"sourcesContent":["\"use strict\";\n\nfunction findRelation_upToPath(urlObj, siteUrlObj, options)\n{\n\t// Path- or root-relative URL\n\tvar pathOnly = urlObj.extra.hrefInfo.minimumPathOnly;\n\t\n\t// Matching scheme, scheme-relative or path-only\n\tvar minimumScheme = (urlObj.scheme===siteUrlObj.scheme || !urlObj.scheme);\n\t\n\t// Matching auth, ignoring auth or path-only\n\tvar minimumAuth = minimumScheme && (urlObj.auth===siteUrlObj.auth || options.removeAuth || pathOnly);\n\t\n\t// Matching host or path-only\n\tvar www = options.ignore_www ? \"stripped\" : \"full\";\n\tvar minimumHost = minimumAuth && (urlObj.host[www]===siteUrlObj.host[www] || pathOnly);\n\t\n\t// Matching port or path-only\n\tvar minimumPort = minimumHost && (urlObj.port===siteUrlObj.port || pathOnly);\n\t\n\turlObj.extra.relation.minimumScheme = minimumScheme;\n\turlObj.extra.relation.minimumAuth   = minimumAuth;\n\turlObj.extra.relation.minimumHost   = minimumHost;\n\turlObj.extra.relation.minimumPort   = minimumPort;\n\t\n\turlObj.extra.relation.maximumScheme = !minimumScheme || minimumScheme && !minimumAuth;\n\turlObj.extra.relation.maximumAuth   = !minimumScheme || minimumScheme && !minimumHost;\n\turlObj.extra.relation.maximumHost   = !minimumScheme || minimumScheme && !minimumPort;\n}\n\n\n\nfunction findRelation_pathOn(urlObj, siteUrlObj, options)\n{\n\tvar queryOnly = urlObj.extra.hrefInfo.minimumQueryOnly;\n\tvar hashOnly  = urlObj.extra.hrefInfo.minimumHashOnly;\n\tvar empty     = urlObj.extra.hrefInfo.empty;\t// not required, but self-documenting\n\t\n\t// From upToPath()\n\tvar minimumPort   = urlObj.extra.relation.minimumPort;\n\tvar minimumScheme = urlObj.extra.relation.minimumScheme;\n\t\n\t// Matching port and path\n\tvar minimumPath = minimumPort && urlObj.path.absolute.string===siteUrlObj.path.absolute.string;\n\t\n\t// Matching resource or query/hash-only or empty\n\tvar matchingResource = (urlObj.resource===siteUrlObj.resource || !urlObj.resource && siteUrlObj.extra.resourceIsIndex) || (options.removeDirectoryIndexes && urlObj.extra.resourceIsIndex && !siteUrlObj.resource);\n\tvar minimumResource = minimumPath && (matchingResource || queryOnly || hashOnly || empty);\n\t\n\t// Matching query or hash-only/empty\n\tvar query = options.removeEmptyQueries ? \"stripped\" : \"full\";\n\tvar urlQuery = urlObj.query.string[query];\n\tvar siteUrlQuery = siteUrlObj.query.string[query];\n\tvar minimumQuery = (minimumResource && !!urlQuery && urlQuery===siteUrlQuery) || ((hashOnly || empty) && !urlObj.extra.hrefInfo.separatorOnlyQuery);\n\t\n\tvar minimumHash = minimumQuery && urlObj.hash===siteUrlObj.hash;\n\t\n\turlObj.extra.relation.minimumPath     = minimumPath;\n\turlObj.extra.relation.minimumResource = minimumResource;\n\turlObj.extra.relation.minimumQuery    = minimumQuery;\n\turlObj.extra.relation.minimumHash     = minimumHash;\n\t\n\turlObj.extra.relation.maximumPort     = !minimumScheme || minimumScheme && !minimumPath;\n\turlObj.extra.relation.maximumPath     = !minimumScheme || minimumScheme && !minimumResource;\n\turlObj.extra.relation.maximumResource = !minimumScheme || minimumScheme && !minimumQuery;\n\turlObj.extra.relation.maximumQuery    = !minimumScheme || minimumScheme && !minimumHash;\n\turlObj.extra.relation.maximumHash     = !minimumScheme || minimumScheme && !minimumHash;\t// there's nothing after hash, so it's the same as maximumQuery\n\t\n\t// Matching path and/or resource with existing but non-matching site query\n\turlObj.extra.relation.overridesQuery  = minimumPath && urlObj.extra.relation.maximumResource && !minimumQuery && !!siteUrlQuery;\n}\n\n\n\nmodule.exports =\n{\n\tpathOn:   findRelation_pathOn,\n\tupToPath: findRelation_upToPath\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}