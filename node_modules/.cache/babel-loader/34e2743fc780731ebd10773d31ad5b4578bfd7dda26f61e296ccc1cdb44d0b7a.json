{"ast":null,"code":"// Generated by CoffeeScript 1.6.3\nvar common;\nmodule.exports = common = {\n  /*\n  \tChecks to see if o is an object, and it isn't an instance\n  \tof some class.\n  */\n\n  isBareObject: function (o) {\n    if (o != null && o.constructor === Object) {\n      return true;\n    }\n    return false;\n  },\n  /*\n  \tReturns type of an object, including:\n  \tundefined, null, string, number, array,\n  \targuments, element, textnode, whitespace, and object\n  */\n\n  typeOf: function (item) {\n    var _ref;\n    if (item === null) {\n      return 'null';\n    }\n    if (typeof item !== 'object') {\n      return typeof item;\n    }\n    if (Array.isArray(item)) {\n      return 'array';\n    }\n    if (item.nodeName) {\n      if (item.nodeType === 1) {\n        return 'element';\n      }\n      if (item.nodeType === 3) {\n        return (_ref = /\\S/.test(item.nodeValue)) != null ? _ref : {\n          'textnode': 'whitespace'\n        };\n      }\n    } else if (typeof item.length === 'number') {\n      if (item.callee) {\n        return 'arguments';\n      }\n    }\n    return typeof item;\n  },\n  clone: function (item, includePrototype) {\n    if (includePrototype == null) {\n      includePrototype = false;\n    }\n    switch (common.typeOf(item)) {\n      case 'array':\n        return common._cloneArray(item, includePrototype);\n      case 'object':\n        return common._cloneObject(item, includePrototype);\n      default:\n        return item;\n    }\n  },\n  /*\n  \tDeep clone of an object.\n  \tFrom MooTools\n  */\n\n  _cloneObject: function (o, includePrototype) {\n    var clone, key;\n    if (includePrototype == null) {\n      includePrototype = false;\n    }\n    if (common.isBareObject(o)) {\n      clone = {};\n      for (key in o) {\n        clone[key] = common.clone(o[key], includePrototype);\n      }\n      return clone;\n    } else {\n      if (!includePrototype) {\n        return o;\n      }\n      if (o instanceof Function) {\n        return o;\n      }\n      clone = Object.create(o.constructor.prototype);\n      for (key in o) {\n        if (o.hasOwnProperty(key)) {\n          clone[key] = common.clone(o[key], includePrototype);\n        }\n      }\n      return clone;\n    }\n  },\n  /*\n  \tDeep clone of an array.\n  \tFrom MooTools\n  */\n\n  _cloneArray: function (a, includePrototype) {\n    var clone, i;\n    if (includePrototype == null) {\n      includePrototype = false;\n    }\n    i = a.length;\n    clone = new Array(i);\n    while (i--) {\n      clone[i] = common.clone(a[i], includePrototype);\n    }\n    return clone;\n  }\n};","map":{"version":3,"names":["common","module","exports","isBareObject","o","constructor","Object","typeOf","item","_ref","Array","isArray","nodeName","nodeType","test","nodeValue","length","callee","clone","includePrototype","_cloneArray","_cloneObject","key","Function","create","prototype","hasOwnProperty","a","i"],"sources":["/Users/Chloe/Desktop/CS1300/UI-Portfolio/node_modules/utila/lib/_common.js"],"sourcesContent":["// Generated by CoffeeScript 1.6.3\nvar common;\n\nmodule.exports = common = {\n  /*\n  \tChecks to see if o is an object, and it isn't an instance\n  \tof some class.\n  */\n\n  isBareObject: function(o) {\n    if ((o != null) && o.constructor === Object) {\n      return true;\n    }\n    return false;\n  },\n  /*\n  \tReturns type of an object, including:\n  \tundefined, null, string, number, array,\n  \targuments, element, textnode, whitespace, and object\n  */\n\n  typeOf: function(item) {\n    var _ref;\n    if (item === null) {\n      return 'null';\n    }\n    if (typeof item !== 'object') {\n      return typeof item;\n    }\n    if (Array.isArray(item)) {\n      return 'array';\n    }\n    if (item.nodeName) {\n      if (item.nodeType === 1) {\n        return 'element';\n      }\n      if (item.nodeType === 3) {\n        return (_ref = /\\S/.test(item.nodeValue)) != null ? _ref : {\n          'textnode': 'whitespace'\n        };\n      }\n    } else if (typeof item.length === 'number') {\n      if (item.callee) {\n        return 'arguments';\n      }\n    }\n    return typeof item;\n  },\n  clone: function(item, includePrototype) {\n    if (includePrototype == null) {\n      includePrototype = false;\n    }\n    switch (common.typeOf(item)) {\n      case 'array':\n        return common._cloneArray(item, includePrototype);\n      case 'object':\n        return common._cloneObject(item, includePrototype);\n      default:\n        return item;\n    }\n  },\n  /*\n  \tDeep clone of an object.\n  \tFrom MooTools\n  */\n\n  _cloneObject: function(o, includePrototype) {\n    var clone, key;\n    if (includePrototype == null) {\n      includePrototype = false;\n    }\n    if (common.isBareObject(o)) {\n      clone = {};\n      for (key in o) {\n        clone[key] = common.clone(o[key], includePrototype);\n      }\n      return clone;\n    } else {\n      if (!includePrototype) {\n        return o;\n      }\n      if (o instanceof Function) {\n        return o;\n      }\n      clone = Object.create(o.constructor.prototype);\n      for (key in o) {\n        if (o.hasOwnProperty(key)) {\n          clone[key] = common.clone(o[key], includePrototype);\n        }\n      }\n      return clone;\n    }\n  },\n  /*\n  \tDeep clone of an array.\n  \tFrom MooTools\n  */\n\n  _cloneArray: function(a, includePrototype) {\n    var clone, i;\n    if (includePrototype == null) {\n      includePrototype = false;\n    }\n    i = a.length;\n    clone = new Array(i);\n    while (i--) {\n      clone[i] = common.clone(a[i], includePrototype);\n    }\n    return clone;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}