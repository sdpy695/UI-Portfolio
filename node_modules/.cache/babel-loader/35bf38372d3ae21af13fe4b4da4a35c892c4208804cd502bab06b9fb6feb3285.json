{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar css_what_1 = require(\"css-what\");\nvar procedure_1 = require(\"./procedure\");\nvar attributes = {\n  exists: 10,\n  equals: 8,\n  not: 7,\n  start: 6,\n  end: 6,\n  any: 5,\n  hyphen: 4,\n  element: 4\n};\n/**\n * Sort the parts of the passed selector,\n * as there is potential for optimization\n * (some types of selectors are faster than others)\n *\n * @param arr Selector to sort\n */\nfunction sortByProcedure(arr) {\n  var procs = arr.map(getProcedure);\n  for (var i = 1; i < arr.length; i++) {\n    var procNew = procs[i];\n    if (procNew < 0) continue;\n    for (var j = i - 1; j >= 0 && procNew < procs[j]; j--) {\n      var token = arr[j + 1];\n      arr[j + 1] = arr[j];\n      arr[j] = token;\n      procs[j + 1] = procs[j];\n      procs[j] = procNew;\n    }\n  }\n}\nexports.default = sortByProcedure;\nfunction getProcedure(token) {\n  var proc = procedure_1.procedure[token.type];\n  if (token.type === css_what_1.SelectorType.Attribute) {\n    proc = attributes[token.action];\n    if (proc === attributes.equals && token.name === \"id\") {\n      // Prefer ID selectors (eg. #ID)\n      proc = 9;\n    }\n    if (token.ignoreCase) {\n      /*\n       * IgnoreCase adds some overhead, prefer \"normal\" token\n       * this is a binary operation, to ensure it's still an int\n       */\n      proc >>= 1;\n    }\n  } else if (token.type === css_what_1.SelectorType.Pseudo) {\n    if (!token.data) {\n      proc = 3;\n    } else if (token.name === \"has\" || token.name === \"contains\") {\n      proc = 0; // Expensive in any case\n    } else if (Array.isArray(token.data)) {\n      // \"matches\" and \"not\"\n      proc = 0;\n      for (var i = 0; i < token.data.length; i++) {\n        // TODO better handling of complex selectors\n        if (token.data[i].length !== 1) continue;\n        var cur = getProcedure(token.data[i][0]);\n        // Avoid executing :has or :contains\n        if (cur === 0) {\n          proc = 0;\n          break;\n        }\n        if (cur > proc) proc = cur;\n      }\n      if (token.data.length > 1 && proc > 0) proc -= 1;\n    } else {\n      proc = 1;\n    }\n  }\n  return proc;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","css_what_1","require","procedure_1","attributes","exists","equals","not","start","end","any","hyphen","element","sortByProcedure","arr","procs","map","getProcedure","i","length","procNew","j","token","default","proc","procedure","type","SelectorType","Attribute","action","name","ignoreCase","Pseudo","data","Array","isArray","cur"],"sources":["/Users/Chloe/Desktop/CS1300/UI-Portfolio/node_modules/css-select/lib/sort.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar css_what_1 = require(\"css-what\");\nvar procedure_1 = require(\"./procedure\");\nvar attributes = {\n    exists: 10,\n    equals: 8,\n    not: 7,\n    start: 6,\n    end: 6,\n    any: 5,\n    hyphen: 4,\n    element: 4,\n};\n/**\n * Sort the parts of the passed selector,\n * as there is potential for optimization\n * (some types of selectors are faster than others)\n *\n * @param arr Selector to sort\n */\nfunction sortByProcedure(arr) {\n    var procs = arr.map(getProcedure);\n    for (var i = 1; i < arr.length; i++) {\n        var procNew = procs[i];\n        if (procNew < 0)\n            continue;\n        for (var j = i - 1; j >= 0 && procNew < procs[j]; j--) {\n            var token = arr[j + 1];\n            arr[j + 1] = arr[j];\n            arr[j] = token;\n            procs[j + 1] = procs[j];\n            procs[j] = procNew;\n        }\n    }\n}\nexports.default = sortByProcedure;\nfunction getProcedure(token) {\n    var proc = procedure_1.procedure[token.type];\n    if (token.type === css_what_1.SelectorType.Attribute) {\n        proc = attributes[token.action];\n        if (proc === attributes.equals && token.name === \"id\") {\n            // Prefer ID selectors (eg. #ID)\n            proc = 9;\n        }\n        if (token.ignoreCase) {\n            /*\n             * IgnoreCase adds some overhead, prefer \"normal\" token\n             * this is a binary operation, to ensure it's still an int\n             */\n            proc >>= 1;\n        }\n    }\n    else if (token.type === css_what_1.SelectorType.Pseudo) {\n        if (!token.data) {\n            proc = 3;\n        }\n        else if (token.name === \"has\" || token.name === \"contains\") {\n            proc = 0; // Expensive in any case\n        }\n        else if (Array.isArray(token.data)) {\n            // \"matches\" and \"not\"\n            proc = 0;\n            for (var i = 0; i < token.data.length; i++) {\n                // TODO better handling of complex selectors\n                if (token.data[i].length !== 1)\n                    continue;\n                var cur = getProcedure(token.data[i][0]);\n                // Avoid executing :has or :contains\n                if (cur === 0) {\n                    proc = 0;\n                    break;\n                }\n                if (cur > proc)\n                    proc = cur;\n            }\n            if (token.data.length > 1 && proc > 0)\n                proc -= 1;\n        }\n        else {\n            proc = 1;\n        }\n    }\n    return proc;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}