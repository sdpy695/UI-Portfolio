{"ast":null,"code":"// Generated by CoffeeScript 1.6.3\nvar array;\nmodule.exports = array = {\n  /*\n  \tTries to turn anything into an array.\n  */\n\n  from: function (r) {\n    return Array.prototype.slice.call(r);\n  },\n  /*\n  \tClone of an array. Properties will be shallow copies.\n  */\n\n  simpleClone: function (a) {\n    return a.slice(0);\n  },\n  shallowEqual: function (a1, a2) {\n    var i, val, _i, _len;\n    if (!(Array.isArray(a1) && Array.isArray(a2) && a1.length === a2.length)) {\n      return false;\n    }\n    for (i = _i = 0, _len = a1.length; _i < _len; i = ++_i) {\n      val = a1[i];\n      if (a2[i] !== val) {\n        return false;\n      }\n    }\n    return true;\n  },\n  pluck: function (a, i) {\n    var index, value, _i, _len;\n    if (a.length < 1) {\n      return a;\n    }\n    for (index = _i = 0, _len = a.length; _i < _len; index = ++_i) {\n      value = a[index];\n      if (index > i) {\n        a[index - 1] = a[index];\n      }\n    }\n    a.length = a.length - 1;\n    return a;\n  },\n  pluckItem: function (a, item) {\n    var index, removed, value, _i, _len;\n    if (a.length < 1) {\n      return a;\n    }\n    removed = 0;\n    for (index = _i = 0, _len = a.length; _i < _len; index = ++_i) {\n      value = a[index];\n      if (value === item) {\n        removed++;\n        continue;\n      }\n      if (removed !== 0) {\n        a[index - removed] = a[index];\n      }\n    }\n    if (removed > 0) {\n      a.length = a.length - removed;\n    }\n    return a;\n  },\n  pluckOneItem: function (a, item) {\n    var index, reached, value, _i, _len;\n    if (a.length < 1) {\n      return a;\n    }\n    reached = false;\n    for (index = _i = 0, _len = a.length; _i < _len; index = ++_i) {\n      value = a[index];\n      if (!reached) {\n        if (value === item) {\n          reached = true;\n          continue;\n        }\n      } else {\n        a[index - 1] = a[index];\n      }\n    }\n    if (reached) {\n      a.length = a.length - 1;\n    }\n    return a;\n  },\n  pluckByCallback: function (a, cb) {\n    var index, removed, value, _i, _len;\n    if (a.length < 1) {\n      return a;\n    }\n    removed = 0;\n    for (index = _i = 0, _len = a.length; _i < _len; index = ++_i) {\n      value = a[index];\n      if (cb(value, index)) {\n        removed++;\n        continue;\n      }\n      if (removed !== 0) {\n        a[index - removed] = a[index];\n      }\n    }\n    if (removed > 0) {\n      a.length = a.length - removed;\n    }\n    return a;\n  },\n  pluckMultiple: function (array, indexesToRemove) {\n    var i, removedSoFar, _i, _len;\n    if (array.length < 1) {\n      return array;\n    }\n    removedSoFar = 0;\n    indexesToRemove.sort();\n    for (_i = 0, _len = indexesToRemove.length; _i < _len; _i++) {\n      i = indexesToRemove[_i];\n      this.pluck(array, i - removedSoFar);\n      removedSoFar++;\n    }\n    return array;\n  },\n  injectByCallback: function (a, toInject, shouldInject) {\n    var i, len, val, valA, valB, _i, _len;\n    valA = null;\n    valB = null;\n    len = a.length;\n    if (len < 1) {\n      a.push(toInject);\n      return a;\n    }\n    for (i = _i = 0, _len = a.length; _i < _len; i = ++_i) {\n      val = a[i];\n      valA = valB;\n      valB = val;\n      if (shouldInject(valA, valB, toInject)) {\n        return a.splice(i, 0, toInject);\n      }\n    }\n    a.push(toInject);\n    return a;\n  },\n  injectInIndex: function (a, index, toInject) {\n    var i, len, toPut, toPutNext;\n    len = a.length;\n    i = index;\n    if (len < 1) {\n      a.push(toInject);\n      return a;\n    }\n    toPut = toInject;\n    toPutNext = null;\n    for (; i <= len; i++) {\n      toPutNext = a[i];\n      a[i] = toPut;\n      toPut = toPutNext;\n    }\n    ;\n    return null;\n  }\n};","map":{"version":3,"names":["array","module","exports","from","r","Array","prototype","slice","call","simpleClone","a","shallowEqual","a1","a2","i","val","_i","_len","isArray","length","pluck","index","value","pluckItem","item","removed","pluckOneItem","reached","pluckByCallback","cb","pluckMultiple","indexesToRemove","removedSoFar","sort","injectByCallback","toInject","shouldInject","len","valA","valB","push","splice","injectInIndex","toPut","toPutNext"],"sources":["/Users/Chloe/Desktop/CS1300/UI-Portfolio/node_modules/utila/lib/array.js"],"sourcesContent":["// Generated by CoffeeScript 1.6.3\nvar array;\n\nmodule.exports = array = {\n  /*\n  \tTries to turn anything into an array.\n  */\n\n  from: function(r) {\n    return Array.prototype.slice.call(r);\n  },\n  /*\n  \tClone of an array. Properties will be shallow copies.\n  */\n\n  simpleClone: function(a) {\n    return a.slice(0);\n  },\n  shallowEqual: function(a1, a2) {\n    var i, val, _i, _len;\n    if (!(Array.isArray(a1) && Array.isArray(a2) && a1.length === a2.length)) {\n      return false;\n    }\n    for (i = _i = 0, _len = a1.length; _i < _len; i = ++_i) {\n      val = a1[i];\n      if (a2[i] !== val) {\n        return false;\n      }\n    }\n    return true;\n  },\n  pluck: function(a, i) {\n    var index, value, _i, _len;\n    if (a.length < 1) {\n      return a;\n    }\n    for (index = _i = 0, _len = a.length; _i < _len; index = ++_i) {\n      value = a[index];\n      if (index > i) {\n        a[index - 1] = a[index];\n      }\n    }\n    a.length = a.length - 1;\n    return a;\n  },\n  pluckItem: function(a, item) {\n    var index, removed, value, _i, _len;\n    if (a.length < 1) {\n      return a;\n    }\n    removed = 0;\n    for (index = _i = 0, _len = a.length; _i < _len; index = ++_i) {\n      value = a[index];\n      if (value === item) {\n        removed++;\n        continue;\n      }\n      if (removed !== 0) {\n        a[index - removed] = a[index];\n      }\n    }\n    if (removed > 0) {\n      a.length = a.length - removed;\n    }\n    return a;\n  },\n  pluckOneItem: function(a, item) {\n    var index, reached, value, _i, _len;\n    if (a.length < 1) {\n      return a;\n    }\n    reached = false;\n    for (index = _i = 0, _len = a.length; _i < _len; index = ++_i) {\n      value = a[index];\n      if (!reached) {\n        if (value === item) {\n          reached = true;\n          continue;\n        }\n      } else {\n        a[index - 1] = a[index];\n      }\n    }\n    if (reached) {\n      a.length = a.length - 1;\n    }\n    return a;\n  },\n  pluckByCallback: function(a, cb) {\n    var index, removed, value, _i, _len;\n    if (a.length < 1) {\n      return a;\n    }\n    removed = 0;\n    for (index = _i = 0, _len = a.length; _i < _len; index = ++_i) {\n      value = a[index];\n      if (cb(value, index)) {\n        removed++;\n        continue;\n      }\n      if (removed !== 0) {\n        a[index - removed] = a[index];\n      }\n    }\n    if (removed > 0) {\n      a.length = a.length - removed;\n    }\n    return a;\n  },\n  pluckMultiple: function(array, indexesToRemove) {\n    var i, removedSoFar, _i, _len;\n    if (array.length < 1) {\n      return array;\n    }\n    removedSoFar = 0;\n    indexesToRemove.sort();\n    for (_i = 0, _len = indexesToRemove.length; _i < _len; _i++) {\n      i = indexesToRemove[_i];\n      this.pluck(array, i - removedSoFar);\n      removedSoFar++;\n    }\n    return array;\n  },\n  injectByCallback: function(a, toInject, shouldInject) {\n    var i, len, val, valA, valB, _i, _len;\n    valA = null;\n    valB = null;\n    len = a.length;\n    if (len < 1) {\n      a.push(toInject);\n      return a;\n    }\n    for (i = _i = 0, _len = a.length; _i < _len; i = ++_i) {\n      val = a[i];\n      valA = valB;\n      valB = val;\n      if (shouldInject(valA, valB, toInject)) {\n        return a.splice(i, 0, toInject);\n      }\n    }\n    a.push(toInject);\n    return a;\n  },\n  injectInIndex: function(a, index, toInject) {\n    var i, len, toPut, toPutNext;\n    len = a.length;\n    i = index;\n    if (len < 1) {\n      a.push(toInject);\n      return a;\n    }\n    toPut = toInject;\n    toPutNext = null;\n    for(; i <= len; i++){\n\n\t\t\ttoPutNext = a[i];\n\n\t\t\ta[i] = toPut;\n\n\t\t\ttoPut = toPutNext;\n\n\t\t};\n    return null;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}